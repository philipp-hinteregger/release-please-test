name: Release
on:
  workflow_dispatch:
    inputs:
      semver-type:
        required: false
    branches:
      - 'main'
      - '[0-9]+.[1-9][0-9]*.x'

defaults:
  run:
    shell: bash
jobs:
  prepare:
    name: Prepare release run
    runs-on: ubuntu-20.04
    steps:
    - name: Check SemVer input
      env:
        SEMVER_TYPE: ${{ github.event.inputs.semver-type }}
      run: |
        if [[ ! -z "$SEMVER_TYPE" ]]; then
          echo "SemVer Type is defined. Checking for valid SemVer type..."
          if [[ "$SEMVER_TYPE" == "major" ]] || [[ "$SEMVER_TYPE" == "minor" ]] || [[ "$SEMVER_TYPE" == "patch" ]]; then
            echo "::notice::SemVer Type is correctly set to $SEMVER_TYPE! Continuing with this version bump..."
          else
            echo "::error::ERROR: Enforced SemVer does not match any of [major,minor,patch]!"
            echo "Exiting..."
            exit 1
          fi
        else
          echo "::notice::No SemVer type defined, continuing with auto generated version number..."
        fi

    - name: Checkout repo
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
        token: ${{ secrets.BOT_SECRET }}

#    - name: Create release
#      id: release
#      uses: google-github-actions/release-please-action@v3
#      with:
#        token: ${{ secrets.BOT_SECRET }}
#        release-type: go
#        include-v-in-tag: false
#        extra-files: "x-release-please.json"

    - name: Find next version number
      id: version_number
      env:
        SEMVER_TYPE: ${{ github.event.inputs.semver-type }}
        GH_TOKEN: ${{ secrets.BOT_SECRET }}
      run: |
        npx release-please@^14.1.0 release-pr \
          --token="$GH_TOKEN" \
          --repo-url=philipp-hinteregger/release-please-test \
          --dry-run=true > release-please-output

        echo "::set-output name=RELEASE_VERSION::$(cat release-please-output | grep '): release' | cut -d ' ' -f4)"

    - name: Output new version
      env:
        VERSION_OUT: ${{ steps.version_number.outputs.RELEASE_VERSION }}
      run: |
        echo $VERSION_OUT

    - name: Create release
      id: create_release
      env:
        SEMVER_TYPE: ${{ github.event.inputs.semver-type }}
        TARGET_BRANCH: ${{ github.event.inputs.branches }}
        GH_TOKEN: ${{ secrets.BOT_SECRET }}
      run: |
        npx release-please@^14.1.0 release-pr \
          --token="$GH_TOKEN" \
          --repo-url=philipp-hinteregger/release-please-test \
          --target-branch=$TARGET_BRANCH